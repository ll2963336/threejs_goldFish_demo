{"mappings":"AAAA,6CAA6C;AAC7C,IAAI,SAAS,CAAC,YAAY,KAAK,SAAS,EACtC,SAAS,CAAC,YAAY,GAAG,EAAE,CAAC;AAG9B,kDAAkD;AAClD,kDAAkD;AAClD,IAAI,SAAS,CAAC,YAAY,CAAC,YAAY,KAAK,SAAS,EACnD,SAAS,CAAC,YAAY,CAAC,YAAY,GAAG,SAAU,WAAW,EAAE;IAC3D,8BAA8B;IAC9B,IAAI,YAAY,GACd,SAAS,CAAC,kBAAkB,IAAI,SAAS,CAAC,eAAe,AAAC;IAE5D,4DAA4D;IAC5D,IAAI,CAAC,YAAY,EACf,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAC7D,CAAC;IAGJ,+CAA+C;IAC/C,OAAO,IAAI,OAAO,CAAC,SAAU,OAAO,EAAE,MAAM,EAAE;QAC5C,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;KAC5D,CAAC,CAAC;CACJ,CAAC;AAGJ,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,AAAC;AAEtD,SAAS,CAAC,YAAY,CACnB,YAAY,CAAC;IACZ,KAAK,EAAE;QACL,SAAS,EAAE;YAAE,KAAK,EAAE,EAAE;YAAE,GAAG,EAAE,EAAE;SAAE;QACjC,UAAU,EAAE;YAAE,KAAK,EAAE,aAAa;SAAE;QACpC,MAAM,EAAE;YAAE,GAAG,EAAE,GAAG;YAAE,KAAK,EAAE,GAAG;YAAE,GAAG,EAAE,GAAG;SAAE;QAC1C,KAAK,EAAE;YAAE,GAAG,EAAE,GAAG,GAAG,MAAM;YAAE,KAAK,EAAE,GAAG,GAAG,MAAM;YAAE,GAAG,EAAE,GAAG,GAAG,MAAM;SAAE;KACrE;CACF,CAAC,CACD,IAAI,CAAC,SAAU,MAAM,EAAE;IACtB,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;IAC5C,KAAK,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAExC,sBAAsB;IACtB,IAAI,WAAW,IAAI,KAAK,EACtB,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;SAEzB,0BAA0B;IAC1B,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IAEjD,KAAK,CAAC,gBAAgB,GAAG,SAAU,CAAC,EAAE;QACpC,KAAK,CAAC,IAAI,EAAE,CAAC;KACd,CAAC;CACH,CAAC,CACD,KAAK,CAAC,SAAU,GAAG,EAAE;IACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;CAC5C,CAAC,CAAC","sources":["src/assets/js/camera.js"],"sourcesContent":["// 老的浏览器可能根本没有实现 mediaDevices，所以我们可以先设置一个空的对象\nif (navigator.mediaDevices === undefined) {\n  navigator.mediaDevices = {};\n}\n\n// 一些浏览器部分支持 mediaDevices。我们不能直接给对象设置 getUserMedia\n// 因为这样可能会覆盖已有的属性。这里我们只会在没有 getUserMedia 属性的时候添加它。\nif (navigator.mediaDevices.getUserMedia === undefined) {\n  navigator.mediaDevices.getUserMedia = function (constraints) {\n    // 首先，如果有 getUserMedia 的话，就获得它\n    var getUserMedia =\n      navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n    // 一些浏览器根本没实现它 - 那么就返回一个 error 到 promise 的 reject 来保持一个统一的接口\n    if (!getUserMedia) {\n      return Promise.reject(\n        new Error(\"getUserMedia is not implemented in this browser\")\n      );\n    }\n\n    // 否则，为老的 navigator.getUserMedia 方法包裹一个 Promise\n    return new Promise(function (resolve, reject) {\n      getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  };\n}\n\nconst aspect = window.innerHeight / window.innerWidth;\n\nnavigator.mediaDevices\n  .getUserMedia({\n    video: {\n      frameRate: { ideal: 30, max: 60 },\n      facingMode: { exact: \"environment\" },\n      height: { min: 320, ideal: 480, max: 800 },\n      width: { min: 320 * aspect, ideal: 480 * aspect, max: 800 * aspect },\n    },\n  })\n  .then(function (stream) {\n    var video = document.querySelector(\"video\");\n    video.setAttribute(\"playsinline\", true);\n\n    // 旧的浏览器可能没有 srcObject\n    if (\"srcObject\" in video) {\n      video.srcObject = stream;\n    } else {\n      // 防止在新的浏览器里使用它，应为它已经不再支持了\n      video.src = window.URL.createObjectURL(stream);\n    }\n    video.onloadedmetadata = function (e) {\n      video.play();\n    };\n  })\n  .catch(function (err) {\n    console.log(err.name + \": \" + err.message);\n  });\n"],"names":[],"version":3,"file":"index.49b83759.js.map","sourceRoot":"/__parcel_source_root/"}